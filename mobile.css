@media only screen and (min-device-width : 320px) and (max-device-width : 480px) {
    body {
        background-color: black;
        color: floralwhite;
        font-family: 'Share Tech Mono', monospace;
        font-size: medium;
        text-align: justify;
    }
    .menu_bar{
        display:none;
    }
    .logo {
        display: inline-block;
        float: left;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        background: url("image_assets/logo_1_1.gif") no-repeat;
        width: 480px; /* Width of new image */
        height: 120px; /* Height of new image */
        padding-left: 480px;
        margin-top: -2px;
        margin-left: -170px;
    }
    .image_home {
        background: url("image_assets/mobile_use.png") no-repeat;
        width: 800px;
        height: 600px;
        margin-top: 260px;
        margin-left: 50px;
    }
    .intro {
        display: inline-block;
        float: left;
        align-self: center;
        text-align: justify;
        margin-top: 750px;
        padding: 30px;
    }
    .lastlinks {
       display: none;
    }
    .learnmore{
        display:none;
    }
.open-main-nav{
    display:none;
}
.main-nav{
    display:none;
}
    /* The component will reset button browser styles */

    .r-button {
        --uirButtonBackgroundColor: var(--rButtonBackgroundColor, transparent);
        --uirButtonPadding: var(--rButtonPadding, var(--rButtonPaddingTop, 0) var(--rButtonPaddingRight, 0) var(--rButtonPaddingBottom, 0) var(--rButtonPaddingLeft, 0));
        --uirButtonBorderWidth: var(--rButtonBorderWidth, 0);
        --uirButtonBorderStyle: var(--rButtonBorderStyle, solid);
        --uirButtonBorderColor: var(--rButtonBorderColor, currentColor);
        --uirButtonFontFamily: var(--rButtonFontFamily, inherit);
        --uirButtonFontSize: var(--rButtonFontSize, inherit);
        --uirButtonColor: var(--rButtonColor);
        background-color: var(--uirButtonBackgroundColor);
        padding: var(--uirButtonPadding);
        border-width: var(--uirButtonBorderWidth);
        border-style: var(--uirButtonBorderStyle);
        border-color: var(--uirButtonBorderColor);
        cursor: pointer;
        font-family: var(--uirButtonFontFamily);
        font-size: var(--uirButtonFontSize);
    }

        .r-button::-moz-focus-inner,
        .r-button[type="button"]::-moz-focus-inner,
        .r-button[type="reset"]::-moz-focus-inner,
        .r-button[type="submit"]::-moz-focus-inner {
            /* Remove the inner border and padding in Firefox. */
            border-style: none;
            padding: 0;
        }

    /* The component will reset browser's styles of link */

    .r-link {
        --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
        --uirLinkTextColor: var(--rLinkTextColor);
        --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
        display: var(--uirLinkDisplay) !important;
        color: var(--uirLinkTextColor) !important;
        text-decoration: var(--uirLinkTextDecoration) !important;
    }

    /* The component will reset browser's styles of list */

    .r-list {
        --uirListPaddingLeft: var(--rListPaddingLeft, 0);
        --uirListMarginTop: var(--rListMarginTop, 0);
        --uirListMarginBottom: var(--rListMarginBottom, 0);
        --uirListListStyle: var(--rListListStyle, none);
        padding-left: var(--uirListPaddingLeft) !important;
        margin-top: var(--uirListMarginTop) !important;
        margin-bottom: var(--uirListMarginBottom) !important;
        list-style: var(--uirListListStyle) !important;
    }

    /* Basic styles of the hamburger component */

    .m-hamburger {
        --uiHamburgerThickness: var(--hamburgerThickness, 4px);
        display: var(--hamburgerDisplay, inline-flex);
        width: var(--hamburgerWidth, 28px);
        height: var(--hamburgerHeight, 20px);
        position: relative;
    }

        .m-hamburger::before,
        .m-hamburger::after,
        .m-hamburger__label {
            width: 100%;
            height: var(--uiHamburgerThickness);
            border-radius: var(--hamburgerBorderRadius, 5px);
            background-color: var(--hamburgerBackgroundColor, currentColor);
            position: absolute;
            left: 0;
        }

        .m-hamburger::before,
        .m-hamburger::after {
            content: "";
        }

        .m-hamburger::before {
            top: 0;
        }

        .m-hamburger::after {
            bottom: 0;
        }

    .m-hamburger__label {
        /* The calculation of middle hamburger button line position */
        top: calc(50% - calc(var(--uiHamburgerThickness) / 2));
    }

    /* helper to hide elements that are available only for screen readers. */

    .screen-reader {
        width: var(--screenReaderWidth, 1px) !important;
        height: var(--screenReaderHeight, 1px) !important;
        padding: var(--screenReaderPadding, 0) !important;
        border: var(--screenReaderBorder, none) !important;
        position: var(--screenReaderPosition, absolute) !important;
        clip: var(--screenReaderClip, rect(1px, 1px, 1px, 1px)) !important;
        overflow: var(--screenReaderOverflow, hidden) !important;
    }

    /*
=====
MENU STYLES
=====
*/

    .menu {
        --uiMenuCircleSize: var(--menuCircleSize, 6.25rem);
        --uiMenuCircleOffset: var(--menuCircleOffset, 1rem);
        --uiMenuCircleHeight: calc(var(--uiMenuCircleSize) / 2);
        --uiMenuCircleBackgroundColor: var(--menuCircleBackgroundColor, currentColor);
        --uiMenuHamburgerWidth: var(--menuHamburgerWidth, 1.75rem);
        --uiMenuHamburgerHeight: var(--menuHamburgerHeight, 1.25rem);
        --rButtonPaddingTop: calc(var(--uiMenuCircleHeight) - var(--uiMenuHamburgerHeight) - var(--uiMenuCircleOffset));
        --hamburgerWidth: var(--uiMenuHamburgerWidth);
        --hamburgerHeight: var(--uiMenuHamburgerHeight);
        --hamburgerBackgroundColor: var(--menuHamburgerBackgroundColor, #fff);
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: fixed;
        bottom: 0;
        left: 0;
        z-index: var(--menuZindex, 9998);
    }

    .menu__nav {
        box-sizing: border-box;
        width: 100%;
        height: 0;
        transition: opacity .2s ease-out;
        opacity: 0;
        display: flex;
        align-items: flex-end;
        z-index: 2;
    }

    .menu__list {
        width: 100%;
        max-height: 100%;
        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
    }

    .menu__toggle {
        box-sizing: border-box;
        width: var(--uiMenuCircleSize);
        height: var(--uiMenuCircleHeight);
        flex: none;
        position: relative;
        z-index: 0;
    }

        .menu__toggle::before {
            /*
  1. The font-size property is used to simplify calculations of the element's sizes and position
  2. The negative value for the bottom property need for hiding half of circle. 
  */
            content: "";
            width: 1.5em;
            height: 1.5em;
            font-size: var(--uiMenuCircleSize); /* 1 */
            background-color: var(--uiMenuCircleBackgroundColor);
            border-radius: 50%;
            position: absolute;
            bottom: -.8em; /* 2 */
            left: calc(50% - .75em);
            z-index: -1;
            will-change: width, height;
            transition: transform .25s cubic-bezier(0.04, -0.1, 0.29, 0.98), width .25s cubic-bezier(0.04, -0.1, 0.29, 0.98), height .25s cubic-bezier(0.04, -0.1, 0.29, 0.98);
        }

    /* styles of hamburger's animation */

    .m-hamburger::before,
    .m-hamburger::after,
    .m-hamburger__label {
        transition-timing-function: ease;
        transition-duration: .15s;
    }

    .m-hamburger::before,
    .m-hamburger::after {
        transition-property: transform;
    }

    .m-hamburger__label {
        transition-property: transform, opacity;
    }

    /*
=====
MENU STATES
=====
*/

    .menu__toggle:focus {
        outline: var(--menuHaburgerOutlineOWidth, 2px) solid var(--menuHaburgerOutlineColor);
        outline-offset: var(--menuHaburgerOutlineOffset, 5px);
    }

    .menu_activated {
        height: 100%;
    }

        .menu_activated .menu__nav {
            flex-grow: 1;
            opacity: 1;
            will-change: opacity;
            transition-duration: .2s;
            transition-delay: .3s;
        }

        .menu_activated .menu__toggle::before {
            width: 100vmax;
            height: 100vmax;
            transform: translate3d(-50vh, -50vh, 0) scale(5);
            transition-duration: 1s;
        }

    .menu:not(.menu_activated) .menu__list {
        display: none;
    }

    .menu_activated .m-hamburger::before {
        top: 50%;
        transform: translate3d(0, -50%, 0) rotate(45deg);
    }

    .menu_activated .m-hamburger::after {
        transform: translate3d(0, -50%, 0) rotate(135deg);
        top: 50%;
    }

    .menu_activated .m-hamburger__label {
        transform: rotate(-45deg) translate3d(-.285em,-.3em, 0);
        opacity: 0;
    }

    /*
=====
SETTINGS
=====
*/

    :root {
        --colorWhite: #fff;
        --colorMain: #4557bb;
        --menuCircleBackgroundColor: var(--colorMain);
        --menuHamburgerBackgroundColor: var(--colorWhite);
        --menuHaburgerOutlineColor: var(--colorMain);
    }

    .menu_activated {
        --menuHaburgerOutlineColor: var(--colorWhite);
    }

    .menu__group {
        --rLinkTextColor: var(--colorWhite);
        padding: .5rem 2rem;
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
    }



    .content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        height: 160px;
        overflow: hidden;
        font-family: 'Lato', sans-serif;
        font-size: 35px;
        line-height: 40px;
        color: #ecf0f1;
        margin-top: -100px;
        margin-left: -260px;
    }

    .content__container {
        font-weight: 600;
        overflow: hidden;
        height: 40px;
        padding: 0 40px;
    }

        .content__container:before {
            content: '[';
            left: 0;
        }

        .content__container:after {
            content: ']';
            position: absolute;
            right: 0;
        }

        .content__container:after, .content__container:before {
            position: absolute;
            top: 0;
            color: #16a085;
            font-size: 42px;
            line-height: 40px;
            -webkit-animation-name: opacity;
            -webkit-animation-duration: 2s;
            -webkit-animation-iteration-count: infinite;
            animation-name: opacity;
            animation-duration: 2s;
            animation-iteration-count: infinite;
        }

    .content__container__text {
        display: inline;
        float: left;
        margin: 0;
    }

    .content__container__list {
        margin-top: 0;
        padding-left: 110px;
        text-align: left;
        list-style: none;
        -webkit-animation-name: change;
        -webkit-animation-duration: 10s;
        -webkit-animation-iteration-count: infinite;
        animation-name: change;
        animation-duration: 10s;
        animation-iteration-count: infinite;
    }

    .content__container__list__item {
        line-height: 40px;
        margin: 0;
    }
    @-webkit-keyframes opacity {
        0%, 100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    @-webkit-keyframes change {
        0%, 12.66%, 100% {
            transform: translate3d(0, 0, 0);
        }

        16.66%, 29.32% {
            transform: translate3d(0, -25%, 0);
        }

        33.32%, 45.98% {
            transform: translate3d(0, -50%, 0);
        }

        49.98%, 62.64% {
            transform: translate3d(0, -75%, 0);
        }

        66.64%, 79.3% {
            transform: translate3d(0, -50%, 0);
        }

        83.3%, 95.96% {
            transform: translate3d(0, -25%, 0);
        }
    }

    @-o-keyframes opacity {
        0%, 100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    @-o-keyframes change {
        0%, 12.66%, 100% {
            transform: translate3d(0, 0, 0);
        }

        16.66%, 29.32% {
            transform: translate3d(0, -25%, 0);
        }

        33.32%, 45.98% {
            transform: translate3d(0, -50%, 0);
        }

        49.98%, 62.64% {
            transform: translate3d(0, -75%, 0);
        }

        66.64%, 79.3% {
            transform: translate3d(0, -50%, 0);
        }

        83.3%, 95.96% {
            transform: translate3d(0, -25%, 0);
        }
    }

    @-moz-keyframes opacity {
        0%, 100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    @-moz-keyframes change {
        0%, 12.66%, 100% {
            transform: translate3d(0, 0, 0);
        }

        16.66%, 29.32% {
            transform: translate3d(0, -25%, 0);
        }

        33.32%, 45.98% {
            transform: translate3d(0, -50%, 0);
        }

        49.98%, 62.64% {
            transform: translate3d(0, -75%, 0);
        }

        66.64%, 79.3% {
            transform: translate3d(0, -50%, 0);
        }

        83.3%, 95.96% {
            transform: translate3d(0, -25%, 0);
        }
    }

    @keyframes opacity {
        0%, 100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    @keyframes change {
        0%, 12.66%, 100% {
            transform: translate3d(0, 0, 0);
        }

        16.66%, 29.32% {
            transform: translate3d(0, -25%, 0);
        }

        33.32%, 45.98% {
            transform: translate3d(0, -50%, 0);
        }

        49.98%, 62.64% {
            transform: translate3d(0, -75%, 0);
        }

        66.64%, 79.3% {
            transform: translate3d(0, -50%, 0);
        }

        83.3%, 95.96% {
            transform: translate3d(0, -25%, 0);
        }
    }


}
